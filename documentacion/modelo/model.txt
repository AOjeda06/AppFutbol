Clase: Model
Descripción: La clase `Model` actúa como una capa de datos para la aplicación, gestionando la información de jugadores, equipos y ligas. Proporciona métodos para agregar, actualizar, eliminar y consultar datos, así como para interactuar con el almacenamiento local.

Métodos:

1. Nombre: `inicializar`
   Descripción: Inicializa el modelo cargando datos desde localStorage si están disponibles.
   Parámetros de entrada: Ninguno.
   Retorno: Ninguno.

2. Nombre: `guardarEstado`
   Descripción: Guarda el estado actual de los datos en localStorage, dividiendo los datos en fragmentos si es necesario.
   Parámetros de entrada: Ninguno.
   Retorno: Ninguno.

3. Nombre: `agregarJugador`
   Descripción: Agrega un nuevo jugador al modelo y lo guarda en localStorage.
   Parámetros de entrada: 
      - `nombre` (string): Nombre del jugador.
      - `posicion` (string): Posición del jugador.
      - `nacimiento` (string): Fecha de nacimiento del jugador.
      - `equipo` (number): ID del equipo al que pertenece el jugador.
   Retorno: Objeto `Jugador` creado.

4. Nombre: `obtenerJugadores`
   Descripción: Obtiene todos los jugadores almacenados en el modelo.
   Parámetros de entrada: Ninguno.
   Retorno: Array de jugadores.

5. Nombre: `filtrarJugadoresPorEquipo`
   Descripción: Filtra los jugadores que pertenecen a un equipo específico.
   Parámetros de entrada:
      - `equipoId` (number): ID del equipo.
   Retorno: Array de jugadores del equipo.

6. Nombre: `agregarEquipo`
   Descripción: Agrega un nuevo equipo al modelo y lo guarda en localStorage.
   Parámetros de entrada: 
      - `nombre` (string): Nombre del equipo.
      - `tla` (string): Código TLA del equipo.
      - `crest` (string): URL del escudo del equipo.
      - `website` (string): Sitio web del equipo.
      - `founded` (number): Año de fundación del equipo.
      - `clubColors` (string): Colores del club.
      - `venue` (string): Estadio del equipo.
      - `ligaId` (number): ID de la liga.
   Retorno: Objeto `Equipo` creado.

7. Nombre: `obtenerEquipos`
   Descripción: Obtiene todos los equipos almacenados en el modelo.
   Parámetros de entrada: Ninguno.
   Retorno: Array de equipos.

8. Nombre: `obtenerEquiposPorLiga`
   Descripción: Obtiene los equipos que pertenecen a una liga específica.
   Parámetros de entrada: 
      - `leagueId` (number): ID de la liga.
   Retorno: Array de equipos de la liga.

9. Nombre: `obtenerJugadoresPorEquipo`
   Descripción: Obtiene los jugadores que pertenecen a un equipo específico.
   Parámetros de entrada: 
      - `teamId` (number): ID del equipo.
   Retorno: Array de jugadores del equipo.

10. Nombre: `buscarEquipoPorNombre`
    Descripción: Busca equipos por nombre.
    Parámetros de entrada: 
       - `nombre` (string): Nombre del equipo.
    Retorno: Array de equipos que coinciden con el nombre.

11. Nombre: `buscarJugadorPorNombre`
    Descripción: Busca jugadores por nombre.
    Parámetros de entrada: 
       - `nombre` (string): Nombre del jugador.
    Retorno: Array de jugadores que coinciden con el nombre.

12. Nombre: `asignarJugadorAEquipo`
    Descripción: Asigna un jugador a un equipo, actualizando los datos en el modelo y en localStorage.
    Parámetros de entrada: 
       - `jugadorId` (number): ID del jugador.
       - `equipoId` (number): ID del equipo.
    Retorno: Ninguno.

13. Nombre: `obtenerDatosJugadores`
    Descripción: Obtiene todos los datos de jugadores desde localStorage.
    Parámetros de entrada: Ninguno.
    Retorno: Array de jugadores.

14. Nombre: `actualizarJugador`
    Descripción: Actualiza los datos de un jugador en localStorage.
    Parámetros de entrada: 
       - `jugadorId` (number): ID del jugador a actualizar.
       - `nuevosDatos` (object): Nuevos datos del jugador.
    Retorno: Ninguno.

15. Nombre: `eliminarJugador`
    Descripción: Elimina un jugador del modelo y actualiza localStorage.
    Parámetros de entrada:
       - `jugadorId` (number): ID del jugador a eliminar.
    Retorno: Ninguno.

16. Nombre: `obtenerDatosEquipos`
    Descripción: Obtiene todos los datos de equipos desde localStorage.
    Parámetros de entrada: Ninguno.
    Retorno: Array de equipos.

17. Nombre: `actualizarEquipo`
    Descripción: Actualiza los datos de un equipo en localStorage.
    Parámetros de entrada: 
       - `equipoId` (number): ID del equipo a actualizar.
       - `nuevosDatos` (object): Nuevos datos del equipo.
    Retorno: Ninguno.

18. Nombre: `obtenerDatosLigas`
    Descripción: Obtiene todos los datos de ligas desde localStorage.
    Parámetros de entrada: Ninguno.
    Retorno: Array de ligas.

19. Nombre: `actualizarLiga`
    Descripción: Actualiza los datos de una liga en localStorage.
    Parámetros de entrada: 
       - `ligaId` (number): ID de la liga a actualizar.
       - `nuevosDatos` (object): Nuevos datos de la liga.
    Retorno: Ninguno.

20. Nombre: `cargarDatosIniciales`
    Descripción: Carga los datos iniciales en el modelo desde un objeto proporcionado.
    Parámetros de entrada: 
       - `datos` (object): Objeto que contiene los datos iniciales.
          - `competition` (object): Objeto que representa la liga.
          - `teams` (array): Lista de equipos de la liga.
    Retorno: Ninguno.

21. Nombre: `eliminarEquipo`
    Descripción: Elimina un equipo del modelo y actualiza localStorage.
    Parámetros de entrada: 
       - `equipoId` (number): ID del equipo a eliminar.
    Retorno: Ninguno.
